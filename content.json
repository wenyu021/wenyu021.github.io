{"pages":[{"title":"me","text":"","link":"/me/index-1.html"},{"title":"About me","text":"不务正业的互联网民工","link":"/me/index.html"}],"posts":[{"title":"从0开始学SQL","text":"第一章初识数据库首先要了解什么是数据库 数据库是将大量数据保存起来，通过计算机加工而成的可以进行高效访问的数据集合。该数据集合称为数据库（Database，DB）。用来管理数据库的计算机系统称为数据库管理系统（Database Management System，DBMS）。 除此之外，还会有数据库系统（Database System，DBS）。DB是一种数据集合，DBMS是管理系统，一种计算机软件，DBS就是由DBMS和DB以及其他的的硬件软件组成的一个整体。 思考： 一本书是不是数据库 图书馆目录卡是不是数据库 银行对账单是不是数据库 电子数据表是不是数据库 初识SQL SQL是一种数据库查询和程序设计语言，用于存取数据以及查询、更新和管理关系数据库系统。 SQL的特点： 数据描述、操纵、控制等功能一体化。 高度非过程化。只需要提出需要什么，而不需要提出要怎么获得。 语法简洁易用创建数据库创建一个名为shop的数据库1CREATE DATABASE shop ; 创建表创建一个名为product的表12345678CREATE TABLE product(product_id CHAR(4) NOT NULL, product_name VARCHAR(100) NOT NULL, product_type VARCHAR(32) NOT NULL, sale_price INTEGER , purchase_price INTEGER , regist_date DATE , PRIMARY KEY (product_id)); SQL中的命名规则规定名称必须以英文字母开头，只能包含英文字母，数字，下划线。其中product_id是列名，CHAR是数据类型, 4是这一列数据的大小, NOT NULL是对数据的约束这里是不能为空。删除表/更新表 删除 DROP TABLE &lt;表名&gt;； 删除/添加表中的指定列 ALTER TABLE &lt;表名&gt; ADD COLUMN &lt;列的定义&gt;其中列的定义与创建表时填写的一样，需要指明列表名， 数据类型等。ALTER TABLE &lt;表名&gt; DROP COLUMN &lt;列名&gt;; 清空表的内容 TRUNCATE TABLE &lt;表名&gt;; 更新表中的数据 UPDATE &lt;表名&gt; SET &lt;列名&gt; = &lt;表达式&gt; [, &lt;列名2&gt;=&lt;表达式2&gt;…];WHERE &lt;条件&gt;; – 可选，非常重要。ORDER BY 子句; –可选LIMIT 子句; –可选 where 条件指定了具体范围，不指定将会更改所有的行 插入数据 INSERT INTO &lt;表名&gt; (列1, 列2, 列3, ……) VALUES (值1, 值2, 值3, ……); 插入多行时可以直接将多行的值写在 VALUES 后面 INSERT INTO &lt;表名&gt; (列1, 列2, 列3, ……) VALUES (值1, 值2, 值3, ……), (值1, 值2, 值3, ……), (值1, 值2, 值3, ……); 建立索引三种方法可以建立索引 创建表的时候建立 1234CREATE TABLE mytable( ... INDEX [索引名] &lt;列名&gt; ); 使用CREATE CREATE INDEX 索引名 ON 表名 (列名)； 使用ALERT ALTER TABLE 表名 ADD INDEX 索引名 (列名)； 练习题1.1编写一条 CREATE TABLE 语句，用来创建一个包含表 1-A 中所列各项的表 Addressbook （地址簿），并为 regist_no （注册编号）列设置主键约束 12345678CREATE TABLE &quot;Adressbook&quot; ( &quot;regist_no&quot; INTEGER NOT NULL, &quot;name&quot; VARCHAR(128) NOT NULL, &quot;address&quot; VARCHAR(256) NOT NULL, &quot;tel_no&quot; CHAR(10), &quot;mail_address&quot; CHAR(20), PRIMARY KEY(&quot;regist_no&quot;)); 1.2假设在创建练习1.1中的 Addressbook 表时忘记添加如下一列 postal_code （邮政编码）了，请编写 SQL 把此列添加到 Addressbook 表中。 列名 ： postal_code 数据类型 ：定长字符串类型（长度为 8） 约束 ：不能为 NULL 1ALTER TABLE Adressbook ADD COLUMN postal_code CHAR(8) NOT NULL; 1.3请补充如下 SQL 语句来删除 Addressbook 表。 1DROP TABLE Addressbook; 1.4是否可以编写 SQL 语句来恢复删除掉的 Addressbook 表？ 删除的表是无法恢复的，只能重新插入 声明 ：以上学习内容根据DataWhale的从0到1掌握SQL课程","link":"/2022/0363e7a474.html"},{"title":"动手学数据分析 Task-01","text":"第一章： 数据载入及初步观察第一节载入数据首先将数据集载入数据集来源 https://www.kaggle.com/c/titanic/overview 此时要用到python中的pandas来帮助读取数据。而常用的的两种引入数据的方式为：read_csv 和 read_table这两种方式有什么区别。执行以下代码来看一下 12345678910import pandas as pddef load_data(): return pd.read_csv(&quot;train.csv&quot;), pd.read_table(&quot;train.csv&quot;)if __name__ == '__main__': csv, table = load_data() print(csv.head()) print(table.head()) print(table.head().shape) 分别用两种方式读取数据集，然后打印前五行 1234567891011121314151617 PassengerId Survived Pclass ... Fare Cabin Embarked0 1 0 3 ... 7.2500 NaN S1 2 1 1 ... 71.2833 C85 C2 3 1 3 ... 7.9250 NaN S3 4 1 1 ... 53.1000 C123 S4 5 0 3 ... 8.0500 NaN S[5 rows x 12 columns] PassengerId,Survived,Pclass,Name,Sex,Age,SibSp,Parch,Ticket,Fare,Cabin,Embarked0 1,0,3,&quot;Braund, Mr. Owen Harris&quot;,male,22,1,0,A/... 1 2,1,1,&quot;Cumings, Mrs. John Bradley (Florence Br... 2 3,1,3,&quot;Heikkinen, Miss. Laina&quot;,female,26,0,0,S... 3 4,1,1,&quot;Futrelle, Mrs. Jacques Heath (Lily May ... 4 5,0,3,&quot;Allen, Mr. William Henry&quot;,male,35,0,0,3... (5, 1)Process finished with exit code 0 可以看到用 read_csv 读取的前五行是 5x12 的数组，说明是以每一个字符串作为存储单位来读取的。而 read_table 读取的前五行是一个 5x1 的数组，每一个元素之前以逗号分隔，说明是以每一行作为存储单位来读取的。如果想让两者的读取效果一样，可以在读取的时候选择用逗号分隔 pd.read_table(&quot;train.csv&quot;, delimiter=&quot;,&quot;) 另外，如果载入数据的数据集非常大，可以利用chunk划分成数据块data = pd.read_csv(&quot;train.csv&quot;, chunksize=100)其中chunksize的值代表每个数据块的行数，chunk的数据类型是dataframe。所以读取的时候遍历即可。下面是一个例子： 12for chunk in data: print(chunk) 输出结果为（一个chunk）： 1234567891011121314PassengerId Survived Pclass ... Fare Cabin Embarked0 1 0 3 ... 7.2500 NaN S1 2 1 1 ... 71.2833 C85 C2 3 1 3 ... 7.9250 NaN S3 4 1 1 ... 53.1000 C123 S4 5 0 3 ... 8.0500 NaN S.. ... ... ... ... ... ... ...95 96 0 3 ... 8.0500 NaN S96 97 0 1 ... 34.6542 A5 C97 98 1 1 ... 63.3583 D10 D12 C98 99 1 2 ... 23.0000 NaN S99 100 0 2 ... 26.0000 NaN S[100 rows x 12 columns] 接着通过观察训练集可以知道，表头一共有12种。将表头转换成中文更有助于我们看清数据背后的联系。 PassengerId =&gt; 乘客IDSurvived =&gt; 是否幸存Pclass =&gt; 乘客等级(1/2/3等舱位)Name =&gt; 乘客姓名Sex =&gt; 性别Age =&gt; 年龄SibSp =&gt; 堂兄弟/妹个数Parch =&gt; 父母与小孩个数Ticket =&gt; 船票信息Fare =&gt; 票价Cabin =&gt; 客舱Embarked =&gt; 登船港口 如果要把表头换成中文并且将索引改为乘客ID。我们可以进行如下操作：首先先创建一个中文名称的array，然后利用header参数将表头去掉，之后把刚才创建好的中文表头“安装”上去。最后再用index_col参数指定乘客ID为索引。 12headers = [&quot;乘客ID&quot;,&quot;是否幸存&quot;,&quot;舱位等级&quot;,&quot;姓名&quot;,&quot;性别&quot;,&quot;年龄&quot;,&quot;兄弟姐妹数量&quot;,&quot;父母小孩数量&quot;,&quot;船票信息&quot;,&quot;票价&quot;,&quot;客舱&quot;,&quot;登船港口&quot;]data2 = pd.read_csv(&quot;train.csv&quot;, names=headers,header=0,index_col=&quot;乘客ID&quot;) 观察数据查看数据基本信息的方法有 .info() 查看数据的基本信息 .head() 查看头部的数据，可以指定行数 .tail() 查看尾部的数据，可以指定行数 .shape() 查看数据的形状 .describe() 查看数据的一些数学/统计意义数据。例如 总数 平均数 方差 下面是是使用.info()得到的数据集的信息 12345678910111213141516171819&lt;class 'pandas.core.frame.DataFrame'&gt;Int64Index: 891 entries, 1 to 891Data columns (total 11 columns): # Column Non-Null Count Dtype --- ------ -------------- ----- 0 是否幸存 891 non-null int64 1 舱位等级 891 non-null int64 2 姓名 891 non-null object 3 性别 891 non-null object 4 年龄 714 non-null float64 5 兄弟姐妹数量 891 non-null int64 6 父母小孩数量 891 non-null int64 7 船票信息 891 non-null object 8 票价 891 non-null float64 9 客舱 204 non-null object 10 登船港口 889 non-null object dtypes: float64(2), int64(4), object(5)memory usage: 83.5+ KBNone 观察发现一共有891个乘客信息。但是年龄这一列有714个非空数据，客舱有204个登船港口有889个，说明数据中存在很多空缺。统计缺失值的方法可以有： isnull()此函数返回的是dataframe中缺失值的情况，缺失为true 其余为falseisnull().sum() 来统计每一列中有多少空缺。isnull().any() 如果某一列含有空缺则会在后面显示true 最后将中文表头的数据储存到新的文件里data2.to_csv(&quot;train-chinese.csv&quot;,encoding='GBK')注意因为我们将表头更改成中文，为了避免出现乱码所以需要指明编码格式 第二节数据类型之前提到过，通过pandas加载的数据的类型是dataframe。这是一种表格类型的数据结构，每一行每一列都有索引值。另一种常见的数据结构是series，它是一种类似数组的由索引值+数值组成的结构。一个小例子 123456s1 = pd.Series(['a','b','c','d'])s2 = pd.Series(['A','B','C','D'])print(s1)print(s2)df1 = pd.DataFrame([s1],[s2])print(df1) 1234567891011121314150 a1 b2 c3 ddtype: object0 A1 B2 C3 Ddtype: object 0 1 2 3A a b c dB a b c dC a b c dD a b c d 查改数据 查看列的名称 df.coloums 查看某列所有的值（Cabin） df.Cabin 或者 df['Cabin'] 删除某列 （Age） del df.Age 或者 del df['Age'] 隐藏某列（Name , Ticket） df.drop(coloums = ['Name','Ticket']) 另外两个范围取值筛选的函数方法是loc和ilocloc通过行的索引的值来筛选数据iloc通过行号来选取数据 12345 Columns1 Columns2 Columns3 Columns4Index1 0.712295 -0.795627 0.335370 -0.471181Index2 0.175748 0.995514 -0.605352 0.965604Index3 1.748486 0.615215 0.494616 -1.241432Index4 1.489864 -0.279662 1.057456 1.632853 用这个简单的数据当例子 12data.loc['Index3','Columns1'] data.iloc[2,0] 的结果都是 1.748486 12data.loc['Index2':'Index4', 'Columns1':'Columns2']data.iloc[1:3,0:1] 的结果都是 123Columns1Index2 0.175748Index3 1.748486 总结本次学习的是python中非常强大的pandas和numpy两个库。由数据加载学习了dataframe这种数据结构以及其他相关的很多方法函数。还学习了对数据的各种操作：删除，隐藏，固定选取，筛选等。 声明 ：以上学习内容根据DataWhale的动手学数据分析课程 本文作者 ：王四喜 版权声明 ：本作品采用知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议，转载请注明出处! 本博客属个人所有，旨在整理和记录学习资料、心得体会，并方便日后查阅，不涉及任何商业目的。如文章不慎造成某方面侵权，实属抱歉，请联系我进行修改或删除。","link":"/2021/09edb8e65c.html"},{"title":"动手学数据分析 Task-02","text":"第二章： 数据清洗及特征处理第一节观察处理缺失值数据集中含有缺失值是很正常的，常见的几个对缺失值的处理方法有： 忽略 删除 填充 在第一章中通过.info()方法观察到Age， Cabin，Embarked三列数据有缺失值，利用isnull().sum()统计一下三个特征中缺失值的数量得到 Age中有177个缺失值，Cabin中有687个缺失值，Embarked中有2个缺失值 缺失值对数据的影响是比较大的所以不可以忽略，对于Age中的177个缺失值可以采用填充的方法。对于Cabin，一般当缺失值的数量大于50%的时候不会采取填充的方法，所以只能删除这个特征。对于Embarked来说，只有2个缺失值，采取填充的方法会更好一些。填充的数值一般有几个方法来确定","link":"/2021/0974b1b7e6.html"}],"tags":[{"name":"SQL","slug":"SQL","link":"/tags/SQL/"},{"name":"python","slug":"python","link":"/tags/python/"}],"categories":[{"name":"数据分析","slug":"数据分析","link":"/categories/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"},{"name":"数据库","slug":"数据库","link":"/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"}]}